{"version":3,"sources":["components/Cell.js","components/Row.js","components/AddRowButton.js","components/AddColButton.js","components/RemoveColButton.js","components/RemoveRowButton.js","components/Builder.js","App.js","index.js"],"names":["Cell","Row","props","cells","map","y","key","AddRowButton","className","onClick","AddColButton","RemoveColButton","style","left","offsetLeft","onMouseLeave","RemoveRowButton","top","offsetTop","Builder","matrix","Array","initialHeight","v","x","initialWidth","state","isRemoveRowBtnVisible","isRemoveColBtnVisible","handleMouseOver","bind","handleMouseLeave","handleAddRowButtonClick","handleAddColButtonClick","handleRemoveRowButtonClick","handleRemoveColButtonClick","this","setState","prev","width","length","row","height","filter","i","event","target","HTMLTableCellElement","parentNode","rowIndex","cellIndex","classList","relatedTarget","contains","rows","onMouseOver","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.669f441e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Cell = () => (<td></td>);\n\nexport default Cell;\n","import React from 'react';\n\nimport Cell from './Cell';\n\nconst Row = (props) => {\n    const cells = props.cells.map(({ y }) => <Cell key={y}/>);\n    return (<tr>{cells}</tr>)\n};\n\nexport default Row;\n","import React from 'react';\n\nconst AddRowButton = (props) => {\n    return (\n        <div className=\"add bottom button\" onClick={props.onClick}>\n            +\n        </div>\n    );\n}\n\nexport default AddRowButton;\n","import React from 'react';\n\nconst AddColButton = (props) => {\n    return (\n        <div className=\"add right button\" onClick={props.onClick}>\n            +\n        </div>\n    );\n}\n\nexport default AddColButton;\n","import React from 'react';\n\nconst RemoveColButton = (props) => {\n    return (\n        <div\n            className=\"remove top button\"\n            style={{ left: `${props.offsetLeft}px` }}\n            onMouseLeave={props.onMouseLeave}\n            onClick={props.onClick}\n        >\n            -\n        </div>\n    );\n}\n\nexport default RemoveColButton;\n","import React from 'react';\n\nconst RemoveRowButton = (props) => {\n    return (\n        <div\n            className=\"remove left button\"\n            style={{ top: `${props.offsetTop}px` }}\n            onMouseLeave={props.onMouseLeave}\n            onClick={props.onClick}\n        >\n            -\n        </div>\n    );\n}\n\nexport default RemoveRowButton;\n","import React from 'react';\n\nimport Row from './Row';\nimport AddRowButton from './AddRowButton';\nimport AddColButton from './AddColButton';\nimport RemoveColButton from './RemoveColButton';\nimport RemoveRowButton from './RemoveRowButton';\n\nconst DEFAULT_PADDING = 41;\n\nclass Builder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const matrix = [...Array(+props.initialHeight)].map((v, x) => {\n            return [...Array(+props.initialWidth)].map((v, y) => ({ x, y }))\n        });\n\n        this.state = {\n            matrix,\n            x: -1,\n            y: -1,\n            offsetLeft: DEFAULT_PADDING,\n            offsetTop: DEFAULT_PADDING,\n            isRemoveRowBtnVisible: false,\n            isRemoveColBtnVisible: false,\n        };\n\n        this.handleMouseOver = this.handleMouseOver.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n\n        this.handleAddRowButtonClick = this.handleAddRowButtonClick.bind(this);\n        this.handleAddColButtonClick = this.handleAddColButtonClick.bind(this);\n\n        this.handleRemoveRowButtonClick = this.handleRemoveRowButtonClick.bind(this);\n        this.handleRemoveColButtonClick = this.handleRemoveColButtonClick.bind(this);\n    }\n\n    handleAddColButtonClick() {\n        this.setState(prev => {\n            const width = prev.matrix[0].length;\n            const matrix = prev.matrix.map((row, x) => [...row, { x, y: width }])\n            return { matrix };\n        });\n    }\n\n    handleAddRowButtonClick() {\n        this.setState(prev => {\n            const height = prev.matrix.length;\n            const width = prev.matrix[0].length;\n\n            const row = [...Array(width)].map((v, y) => ({ x: height, y }));\n            const matrix = [...prev.matrix, row];\n\n            return { matrix };\n        });\n    }\n\n    handleRemoveRowButtonClick() {\n        this.setState(prev => ({\n            isRemoveRowBtnVisible: false,\n            isRemoveColBtnVisible: false,\n            matrix: prev.matrix.filter((v, i) => i !== prev.x),\n        }));\n    }\n\n    handleRemoveColButtonClick() {\n        this.setState(prev => {\n            const matrix = prev.matrix.map(row => {\n                return row.filter((v, i) => i !== prev.y);\n            });\n\n            return {\n                isRemoveRowBtnVisible: false,\n                isRemoveColBtnVisible: false,\n                matrix,\n            }\n        });\n    }\n\n    handleMouseOver(event) {\n        if (!(event.target instanceof HTMLTableCellElement)) return;\n\n        const x = event.target.parentNode.rowIndex;\n        const y = event.target.cellIndex;\n\n        const offsetLeft = DEFAULT_PADDING + event.target.offsetLeft;\n        const offsetTop = DEFAULT_PADDING + event.target.offsetTop;\n\n        this.setState(prev => ({\n            x,\n            y,\n            offsetLeft,\n            offsetTop,\n            isRemoveRowBtnVisible: prev.matrix.length > 1,\n            isRemoveColBtnVisible: prev.matrix[0].length > 1,\n        }));\n    }\n\n    handleMouseLeave(event) {\n        const classList = event.relatedTarget.classList;\n        if (classList && classList.contains('remove')) return;\n        this.setState(() => ({\n            isRemoveRowBtnVisible: false,\n            isRemoveColBtnVisible: false,\n        }));\n    }\n\n    render() {\n        const rows = this.state.matrix.map(cells => <Row cells={cells} key={cells[0].x}/>);\n\n        return (\n            <div className=\"main\" >\n                <div className=\"table\" onMouseOver={this.handleMouseOver} onMouseLeave={this.handleMouseLeave}>\n                    <table>\n                        <tbody>{rows}</tbody>\n                    </table>\n                </div>\n\n                <AddRowButton onClick={this.handleAddRowButtonClick} />\n                <AddColButton onClick={this.handleAddColButtonClick} />\n\n                {this.state.isRemoveRowBtnVisible && <RemoveRowButton offsetTop={this.state.offsetTop} onMouseLeave={this.handleMouseLeave} onClick={this.handleRemoveRowButtonClick} />}\n                {this.state.isRemoveColBtnVisible && <RemoveColButton offsetLeft={this.state.offsetLeft} onMouseLeave={this.handleMouseLeave} onClick={this.handleRemoveColButtonClick} />}\n            </div>\n        )\n    }\n}\n\nexport default Builder;\n","import React from 'react';\n\nimport Builder from './components/Builder';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n          <Builder initialWidth='4' initialHeight='4'/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}