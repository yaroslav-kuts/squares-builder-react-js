{"version":3,"sources":["components/Cell.js","components/Row.js","components/Button.js","components/Builder.js","App.js","index.js"],"names":["Cell","cellSize","style","width","height","defaultProps","Row","cells","map","cellIndex","key","rowIndex","signs","add","remove","Button","action","side","offset","onMouseLeave","onClick","className","left","top","Builder","props","handleAddColButtonClick","setState","matrix","length","row","handleAddRowButtonClick","Array","v","handleRemoveRowButtonClick","isRemoveRowBtnVisible","isRemoveColBtnVisible","filter","i","handleRemoveColButtonClick","handleMouseOver","target","parentNode","offsetLeft","offsetTop","HTMLTableCellElement","handleMouseLeave","classList","relatedTarget","contains","initialHeight","initialWidth","_v","state","this","padding","onMouseOver","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1ee95e2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Cell = ({ cellSize }) => (<td style={{ width: cellSize, height: cellSize }} />);\n\nCell.defaultProps = { cellSize: 50 };\n\nCell.propTypes = { cellSize: PropTypes.number };\n\nexport default Cell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Cell from './Cell';\n\nconst Row = ({ cells, cellSize }) => (\n  <tr>\n    {cells.map(({ cellIndex }) => <Cell cellSize={cellSize} key={cellIndex} />)}\n  </tr>\n);\n\nRow.defaultProps = {\n  cellSize: 50,\n  cells: [{ rowIndex: 0, cellIndex: 0 }],\n};\n\nRow.propTypes = {\n  cellSize: PropTypes.number,\n  cells: PropTypes.arrayOf((cells, key, component, location, propName) => {\n    const errorText = `${component} has received invalid prop: ${propName}`;\n    const { rowIndex, cellIndex } = cells[key];\n    if (rowIndex < 0 || cellIndex < 0) return new Error(errorText);\n  }),\n};\n\nexport default Row;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DEFAULT_SHIFT = 3;\n\nconst signs = { add: '+', remove: '-' };\n\nconst Button = ({\n  action, side, offset, cellSize, onMouseLeave, onClick,\n}) => (\n  <div\n    className={`${action} ${side} button`}\n    style={{\n      [side]: offset,\n      width: cellSize,\n      height: cellSize,\n      ...(action === 'add' && side === 'bottom' ? { left: cellSize + DEFAULT_SHIFT } : {}),\n      ...(action === 'add' && side === 'right' ? { top: cellSize + DEFAULT_SHIFT } : {}),\n    }}\n    onMouseLeave={onMouseLeave}\n    onClick={onClick}\n  >\n    {signs[action]}\n  </div>\n);\n\nButton.defaultProps = {\n  action: 'add',\n  side: 'top',\n  offset: 0,\n  cellSize: 50,\n  onMouseLeave: () => {},\n  onClick: () => {},\n};\n\nButton.propTypes = {\n  action: PropTypes.oneOf(['add', 'remove']),\n  side: PropTypes.oneOf(['top', 'bottom', 'left', 'right']),\n  offset: PropTypes.number,\n  cellSize: PropTypes.number,\n  onMouseLeave: PropTypes.func,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Row from './Row';\nimport Button from './Button';\n\nconst DEFAULT_SHIFT = 1;\n\nclass Builder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { initialHeight, initialWidth, cellSize } = props;\n\n    const matrix = [...Array(initialHeight)]\n      .map((v, rowIndex) => [...Array(initialWidth)]\n        .map((_v, cellIndex) => ({ rowIndex, cellIndex })));\n\n    this.state = {\n      matrix,\n      rowIndex: -1,\n      cellIndex: -1,\n      offsetLeft: 0,\n      offsetTop: 0,\n      isRemoveRowBtnVisible: false,\n      isRemoveColBtnVisible: false,\n      cellSize,\n    };\n  }\n\n    handleAddColButtonClick = () => {\n      this.setState(({ matrix }) => {\n        const { cellIndex } = matrix[0][matrix[0].length - 1];\n        return {\n          matrix: matrix.map((row, rowIndex) => [...row, {\n            rowIndex, cellIndex: cellIndex + 1,\n          }]),\n        };\n      });\n    }\n\n    handleAddRowButtonClick = () => {\n      this.setState(({ matrix }) => {\n        const { rowIndex } = matrix[matrix.length - 1][0];\n        const row = [...Array(matrix[0].length)].map((v, cellIndex) => ({\n          rowIndex: rowIndex + 1, cellIndex,\n        }));\n        return { matrix: [...matrix, row] };\n      });\n    }\n\n    handleRemoveRowButtonClick = () => {\n      this.setState(({ matrix, rowIndex }) => ({\n        isRemoveRowBtnVisible: false,\n        isRemoveColBtnVisible: false,\n        matrix: matrix.filter((v, i) => i !== rowIndex),\n      }));\n    }\n\n    handleRemoveColButtonClick = () => {\n      this.setState(({ matrix, cellIndex }) => ({\n        isRemoveRowBtnVisible: false,\n        isRemoveColBtnVisible: false,\n        matrix: matrix.map((row) => row.filter((v, i) => i !== cellIndex)),\n      }));\n    }\n\n    handleMouseOver = ({\n      target,\n      target: {\n        parentNode: { rowIndex },\n        cellIndex,\n        offsetLeft,\n        offsetTop,\n      },\n    }) => {\n      if (!(target instanceof HTMLTableCellElement)) return;\n\n      this.setState(({ cellSize, matrix }) => ({\n        rowIndex,\n        cellIndex,\n        offsetLeft: cellSize + DEFAULT_SHIFT + offsetLeft,\n        offsetTop: cellSize + DEFAULT_SHIFT + offsetTop,\n        isRemoveRowBtnVisible: matrix.length > 1,\n        isRemoveColBtnVisible: matrix[0].length > 1,\n      }));\n    }\n\n    handleMouseLeave = ({ relatedTarget: { classList } }) => {\n      if (classList && classList.contains('remove')) return;\n      this.setState(({\n        isRemoveRowBtnVisible: false,\n        isRemoveColBtnVisible: false,\n      }));\n    }\n\n    render() {\n      const {\n        matrix,\n        offsetTop,\n        offsetLeft,\n        isRemoveColBtnVisible,\n        isRemoveRowBtnVisible,\n        cellSize,\n      } = this.state;\n\n      return (\n        <div className=\"main\" style={{ padding: cellSize }} >\n          <div className=\"table\" onMouseOver={this.handleMouseOver} onMouseLeave={this.handleMouseLeave}>\n            <table>\n              <tbody>\n                {matrix.map((cells) => (\n                  <Row\n                    cellSize={cellSize}\n                    cells={cells}\n                    key={cells[0].rowIndex}\n                  />\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          <Button\n            side=\"bottom\"\n            action=\"add\"\n            cellSize={cellSize}\n            onClick={this.handleAddRowButtonClick}\n          />\n          <Button\n            side=\"right\"\n            action=\"add\"\n            cellSize={cellSize}\n            onClick={this.handleAddColButtonClick}\n          />\n\n          {isRemoveRowBtnVisible && (\n          <Button\n            side=\"top\"\n            action=\"remove\"\n            offset={offsetTop}\n            cellSize={cellSize}\n            onMouseLeave={this.handleMouseLeave}\n            onClick={this.handleRemoveRowButtonClick}\n          />\n          )}\n          {isRemoveColBtnVisible && (\n          <Button\n            side=\"left\"\n            action=\"remove\"\n            offset={offsetLeft}\n            cellSize={cellSize}\n            onMouseLeave={this.handleMouseLeave}\n            onClick={this.handleRemoveColButtonClick}\n          />\n          )}\n        </div>\n      );\n    }\n}\n\nBuilder.defaultProps = {\n  initialWidth: 4,\n  initialHeight: 4,\n  cellSize: 50,\n};\n\nBuilder.propTypes = {\n  initialWidth: PropTypes.number,\n  initialHeight: PropTypes.number,\n  cellSize: PropTypes.number,\n};\n\nexport default Builder;\n","import React from 'react';\n\nimport Builder from './components/Builder';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Builder initialWidth={4} initialHeight={4} cellSize={50} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}